@page "/admin/businesses"
@layout AdminLayout

@using OrderNow.Blazor.Pages.Business.Components
@using OrderNow.Common.Data.Entities
@using OrderNow.Common.Services

<AuthorizeView>
    <Authorized>
        @if (businesses != null && businesses.Any())
        {
            <div class="row pt-4">

                @foreach (var business in businesses)
                {
                    <div class="card" style="width: 25rem; margin:1rem">
                        <i class="bi bi-shop-window" style="font-size:3rem;"></i>
                        <div class="card-body">
                            <h5 class="card-title">@business.Name</h5>
                            <p class="card-text">@business.ContractURL</p>
                            @if (@business.IsValidated)
                            {
                                <i class="bi bi-check2-circle" style="font-size:2rem;"></i>
                            }
                            else
                            {
                                <i class="bi bi-circle"></i>
                            }

                            <a class="btn btn-outline-dark align-bottom" href="/abm/business"><i class="bi bi-check2-circle" style="font-size:2rem;"></i></a>

                        </div>
                    </div>
                }
            </div>
        }
        <a class="btn btn-outline-dark align-bottom" href="/abm/business">Nuevo Comercio</a>
    </Authorized>
    <NotAuthorized>
        <h1>Sin autorización para ver esta página</h1>
    </NotAuthorized>
</AuthorizeView>


@code {
    [Parameter]
    public string? contractURL { get; set; }
    [Parameter]
    public IEnumerable<Business>? businesses { get; set; }
    public Business business { get; set; } = new();


    public string ElapsedTime(DateTime createdAt)
    {
        DateTime startTime = _dateTimeProvider.UtcNow;
        var h = startTime.Subtract(createdAt).Hours.ToString("00");
        var m = startTime.Subtract(createdAt).Minutes.ToString("00");
        return $"{h}:{m}";
    }
    protected override async Task OnInitializedAsync()
    {
        businesses = await _businessesServices.GetAll();


    }



}