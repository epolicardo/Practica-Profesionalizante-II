@using OrderNow.API.Services
@using OrderNow.BlazorServer.Services

@using System.Text.Json
@using OrderNow.Common.Data.Entities
@inject IHttpClientFactory ClientFactory
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<table class="table">
	<thead class="table-header">
		<tr>
			<th>Cliente</th>
			<th>Estado</th>
			<th>Demora actual</th>
			<th>Items</th>
			<th>Total</th>
			<th>Accion</th>
		</tr>
	</thead>
	<tbody>
		@if (orders != null)
		{
			@foreach (var order in orders)
			{
				<tr>
					<td>
						<p class="name">@order.OrderDate</p>
					</td>
					<td>
						<div class="status-box">
							<p>@order.OrderStatus</p>
						</div>
					</td>
					<td>
						<div class="status-progress-bar">
						</div>
						<p class="order-time-delay"></p>
					</td>
					<td>
						<p class="order-items">@order.PartialCompletionOrderDate</p>
					</td>
					<td>
						<p class="order-amount">@order.TotalAmount</p>
					</td>
				</tr>
			}
		}
	</tbody>
</table>

@code {

	[ParameterAttribute]
	public string? TableName { get; set; }
	[ParameterAttribute]
	public string? itemCount { get; set; }
	[Inject]
	protected IOrdersServices? _ordersService { get; set; }
	[Inject]
	protected IDateTimeProvider? _dateTimeProvider { get; set; }

	public IEnumerable<Orders>? orders { get; set; }
	//GetCookieBusinessId
	protected override async Task OnInitializedAsync()
	{
		orders = await _ordersService.GetPendingOrdersByBusiness("269c886d-325f-4865-9cc4-34449aa3f56a");
	}

	

}